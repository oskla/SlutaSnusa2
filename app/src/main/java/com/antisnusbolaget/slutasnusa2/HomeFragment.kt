package com.antisnusbolaget.slutasnusa2

import android.os.Bundle
import androidx.fragment.app.Fragment
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import androidx.core.view.isVisible
import androidx.fragment.app.activityViewModels
import com.antisnusbolaget.slutasnusa2.databinding.FragmentHomeBinding
import com.antisnusbolaget.slutasnusa2.model.UserViewModel
import com.google.android.material.bottomnavigation.BottomNavigationView
import com.google.firebase.FirebaseApp
import com.google.firebase.database.DatabaseReference
import com.google.firebase.database.FirebaseDatabase

class HomeFragment : Fragment() {
    private val sharedViewModel: UserViewModel by activityViewModels()
    private var binding: FragmentHomeBinding? = null

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        sharedViewModel.saveLocal("unit",sharedViewModel.unitPerWeek.value.toString())
        sharedViewModel.saveLocal("cost",sharedViewModel.costPerUnit.value.toString())
        sharedViewModel.saveLocal("date",sharedViewModel.quitDate)
        binding?.apply{
        }
    }

    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View {
        val fragmentBinding = FragmentHomeBinding.inflate(inflater, container, false)
        binding = fragmentBinding

        val navBar: BottomNavigationView? = activity?.findViewById(R.id.bottom_navigation)
        navBar?.isVisible=true

        binding?.apply {
            // Calculate daysSinceQuit and moneySaved
            sharedViewModel.dateSinceQuit()
            sharedViewModel.moneySaved()
            // Set textViews
            twDaysWithout.text = sharedViewModel.daysWithout.value.toString()
            twMoneySaved.text = sharedViewModel.totalMoneySaved.value.toString()
            // Animator for textViews, null-safe-call autogenerated
            sharedViewModel.daysWithout.value?.let { sharedViewModel.totalValuesAnimator(twDaysWithout,
                it
            ) }
            sharedViewModel.totalMoneySaved.value?.let { sharedViewModel.totalValuesAnimator(twMoneySaved,
                it
            ) }
        }
        return fragmentBinding.root
    }
}


