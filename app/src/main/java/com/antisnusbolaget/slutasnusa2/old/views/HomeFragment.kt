package com.antisnusbolaget.slutasnusa2.old.views

import android.os.Bundle
import androidx.fragment.app.Fragment
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import androidx.annotation.IdRes
import androidx.core.view.isVisible
import androidx.fragment.app.activityViewModels
import androidx.lifecycle.lifecycleScope
import androidx.navigation.NavController
import androidx.navigation.fragment.findNavController
import com.antisnusbolaget.slutasnusa2.R
import com.antisnusbolaget.slutasnusa2.databinding.FragmentHomeBinding
import com.antisnusbolaget.slutasnusa2.old.viewmodel.UserViewModel
import com.google.android.material.bottomnavigation.BottomNavigationView

class HomeFragment : Fragment() {
    private val sharedViewModel: UserViewModel by activityViewModels()
    private var binding: FragmentHomeBinding? = null

    private fun NavController.safelyNavigate(@IdRes resId: Int, args: Bundle? = null) =
        try { navigate(resId, args) }
        catch (e: Exception) { (e) }

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        sharedViewModel.saveLocal("unit",sharedViewModel.unitPerWeek.value.toString())
        sharedViewModel.saveLocal("cost",sharedViewModel.costPerUnit.value.toString())
        sharedViewModel.saveLocal("date",sharedViewModel.quitDate)
    }

    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View {
        val fragmentBinding = FragmentHomeBinding.inflate(inflater, container, false)
        binding = fragmentBinding

        val navBar: BottomNavigationView? = activity?.findViewById(R.id.bottomNavigationView)
        navBar?.isVisible=true

        binding?.apply {
            // Calculate daysSinceQuit and moneySaved
            sharedViewModel.dateSinceQuit()
            sharedViewModel.moneySaved()
            // Set textViews
            twDaysWithout.text = sharedViewModel.daysWithout.value.toString()
            twMoneySaved.text = sharedViewModel.totalMoneySaved.value.toString()

            // Animator for textViews, null-safe-call autogenerated
            if (sharedViewModel.animationRuns <= 1) {
                sharedViewModel.daysWithout.value?.let { sharedViewModel.totalValuesAnimator(twDaysWithout,
                    it
                ) }
                sharedViewModel.totalMoneySaved.value?.let { sharedViewModel.totalValuesAnimator(twMoneySaved,
                    it
                ) }

                sharedViewModel.animationRuns = sharedViewModel.animationRuns + 1
            }

            if (sharedViewModel.settingsChanged) {
                sharedViewModel.daysWithout.value?.let { sharedViewModel.totalValuesAnimatorSettings(twDaysWithout,
                    it
                ) }
                sharedViewModel.totalMoneySaved.value?.let { sharedViewModel.totalValuesAnimatorSettings(twMoneySaved,
                    it
                ) }

                sharedViewModel.settingsChanged = false
            }



            btnSettings.setOnClickListener{
                lifecycleScope.launchWhenResumed {
                    findNavController().safelyNavigate(R.id.action_homeFragment_to_settingsFragment)
                }
            }
        }
        return fragmentBinding.root
    }
}


